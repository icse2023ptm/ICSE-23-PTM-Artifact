from requests import Response, get
from progress.bar import Bar
from argparse import Namespace, ArgumentParser 

def downloadArgs() -> Namespace:
    parser: ArgumentParser = ArgumentParser(
        prog=f"Get Model Information",
        usage="Get model information into a usable format",
    )
    parser.add_argument(
        "-i",
        "--input",
        type=str,
        required=True,
        help="Model author/repo string to download html",
    )
    return parser.parse_args()

def buildURLs(data: str)   ->  tuple:
    urls: list = (data.strip().replace("/", "_"), f"https://huggingface.co/{data.strip()}/tree/HEAD")
    return urls

def downloadData(data: tuple)    ->  None:
    resp: Response = get(data[1])

    if resp.status_code == 404:
        print(f"{data[0]}\t\t\t\tFAILED")
        quit()
    if resp.status_code == 405:
        print(f"{data[0]}\t\t\t\tFAILED")
        quit()


    with open(f"html/{data[0]}.html", "w") as htmlFile:
        htmlFile.write(resp.content.decode("UTF-8"))
        htmlFile.close()
    print(f"{data[0]}\t\t\t\tDONE")


def main()  ->  None:
    args = downloadArgs()
    data = buildURLs(args.input)

    downloadData(data)
if __name__ == "__main__":
    main()
