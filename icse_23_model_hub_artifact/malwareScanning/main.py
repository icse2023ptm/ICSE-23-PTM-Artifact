from argparse import Namespace, ArgumentParser
from os import listdir
from pathlib import Path

from bs4 import BeautifulSoup, ResultSet
from progress.bar import Bar


def malwareScannerArgs() -> Namespace:
    parser: ArgumentParser = ArgumentParser(
        prog="Hugging Face Malware Scanner",
        usage="Scan a directory of Hugging Face model repository HTML file tree files for malware tags and print out the amount of malware found",
    )
    parser.add_argument(
        "-i",
        "--input",
        type=str,
        required=True,
        help="Directory of HTML files to analyze",
    )
    return parser.parse_args()

def getFileList(directory: str) -> list:
    path: Path = Path(directory).absolute()
    return [Path(f"{path.__str__()}/{filename}") for filename in listdir(path)]


def main() -> None:
    args: Namespace = malwareScannerArgs()

    infected: list = []

    fileList: list = getFileList("html")

    with Bar("Looking for malware...", max=len(fileList)) as bar:
        filepath: Path
        for filepath in fileList:
            with open(filepath, "r") as htmlFile:
                soup: BeautifulSoup = BeautifulSoup(htmlFile, features="lxml")
                infectedTags: ResultSet = soup.find_all(
                    name="span", attrs={"title": "Infected: Eicar-Signature"}
                )

                if infectedTags:
                    infected.append(f"{filepath.__str__()}\n")

                htmlFile.close()

            bar.next()

    print(f"Number of infected files: {len(infected)}")
    print(infected)

    # with open(args.input, "r") as inputFile:
    #     urls: list = [url.strip() for url in inputFile.readlines()]
    #     inputFile.close()

    # with Bar("Looking for malware...", max=len(urls)) as bar:
    #     url: str
    #     for url in urls:
    #         url = url + "/tree/main"
    #         resp: Response = get(url=url)
    #         soup: BeautifulSoup = BeautifulSoup(resp.content, features="lxml")

    #         infectedFiles: ResultSet = soup.find_all(
    #             name="span", attrs={"title": "Infected: Eicar-Signature"}
    #         )

    #         if len(infectedFiles) > 0:
    #             infectedFiles.append(url + "\n")

    #         bar.next()

    # with open(args.output, "w") as output:
    #     output.writelines(infected)


if __name__ == "__main__":
    main()
